<?xml version='1.0' encoding='UTF-8'?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cloudysunny14</groupId>
	<artifactId>infinispan-cachestore-jpa-eclipselink</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Infinispan JPA CacheStore Eclipselink</name>
	<description>Infinispan JPA CacheStore module</description>
	<developers>
		<developer>
			<name>Kiyonari Harigae</name>
			<email>lakshmi@cloudysunny14.org</email>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>Apache License</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
			<distribution>repo</distribution>
		</license>
		<license>
			<name>Eclipse Public License v1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
			<distribution>repo</distribution>
			<comments>Standard Eclipse Licence</comments>
		</license>
		<license>
			<name>Eclipse Distribution License v. 1.0</name>
			<url>http://www.eclipse.org/org/documents/edl-v10.php</url>
			<distribution>repo</distribution>
			<comments>Standard Eclipse Distribution License</comments>
		</license>
	</licenses>
	<properties>
		<version.java>1.7</version.java>
		<version.maven-compiler-plugin>3.1</version.maven-compiler-plugin>
		<version.maven.buildhelper>1.8</version.maven.buildhelper>
		<version.maven.bundle>2.4.0</version.maven.bundle>
		<version.maven.scala>2.15.2</version.maven.scala>
		<version.maven.surefire>2.16</version.maven.surefire>
		<version.infinispan-core>7.2.0-SNAPSHOT</version.infinispan-core>
		<version.osgi>4.3.1</version.osgi>
		<version.slf4j>1.7.5</version.slf4j>
		<version.scala.major>2.11</version.scala.major>
		<version.scala>${version.scala.major}.5</version.scala>
		<version.scala-tools>${version.scala.major}.5</version.scala-tools>
		<version.h2.driver>1.4.180</version.h2.driver>
		<version.eclipselink>2.5.1</version.eclipselink>
		<version.metainf-services>1.5</version.metainf-services>
		<version.testng>6.8.8</version.testng>
		<version.postgresql.driver>9.3-1101-jdbc41</version.postgresql.driver>
		<version.mockito>1.9.5</version.mockito>
		<version.junit>4.11</version.junit>
		<infinispan.core.schema.version>7.2</infinispan.core.schema.version>
	</properties>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven-compiler-plugin}</version>
					<configuration>
						<source>${version.java}</source>
						<target>${version.java}</target>
						<encoding>UTF-8</encoding>
						<excludes>
							<exclude>**/package-info.java</exclude>
						</excludes>
						<compilerArgument>-AtranslationFilesPath=${project.basedir}/target/generated-translation-files</compilerArgument>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.maven.buildhelper}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${version.maven.bundle}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>features.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>schema/*-${infinispan.core.schema.version}.xsd</include>
				</includes>
			</resource>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>features.xml</exclude>
					<exclude>schema/**</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.scala-tools</groupId>
				<artifactId>maven-scala-plugin</artifactId>
				<version>${version.maven.scala}</version>
				<executions>
					<execution>
						<id>generate-blueprint</id>
						<phase>prepare-package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<Export-Package>
							${project.groupId}.persistence.jpa.*;version=${project.version};-split-package:=error
						</Export-Package>
						<Import-Package>
							*
						</Import-Package>
						<Include-Resource>
							{maven-resources},
							/META-INF/services=${project.basedir}/target/classes/META-INF/services,
							/OSGI-INF/blueprint/blueprint.xml=${project.basedir}/target/classes/OSGI-INF/blueprint/blueprint.xml
						</Include-Resource>
						<DynamicImport-Package>*</DynamicImport-Package>
					</instructions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>target/classes/features.xml</file>
									<type>xml</type>
									<classifier>features</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven.surefire}</version>
				<configuration>
					<threadCount>1</threadCount>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>${version.infinispan-core}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>eclipselink</artifactId>
			<version>${version.eclipselink}</version>
		</dependency>
		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<version>${version.infinispan-core}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${version.slf4j}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<version>${version.osgi}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<version>${version.osgi}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.kohsuke.metainf-services</groupId>
			<artifactId>metainf-services</artifactId>
			<optional>true</optional>
			<version>${version.metainf-services}</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${version.testng}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.yaml</groupId>
					<artifactId>snakeyaml</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${version.mockito}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
         </dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>h2</id>
			<activation>
            	<activeByDefault>true</activeByDefault>
         	</activation>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${version.h2.driver}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<connection.url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection.url>
								<driver.class>org.h2.Driver</driver.class>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mysql</id>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${version.mysql.driver}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<connection.url>jdbc:mysql://localhost:3306/ispn_jpa_test</connection.url>
								<driver.class>com.mysql.jdbc.Driver</driver.class>
								<db.username>${db.username}</db.username>
								<db.password>${db.password}</db.password>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>postgres</id>
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>${version.postgresql.driver}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<connection.url>jdbc:postgresql://localhost:5432/testdb</connection.url>
								<driver.class>org.postgresql.Driver</driver.class>
								<db.username>${db.username}</db.username>
								<db.password>${db.password}</db.password>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
